# Generated by Django 3.1.13 on 2021-12-01 11:01

import time
from django.db import migrations

from rbac.builtin import BuiltinRole


def migrate_system_role_binding(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    user_model = apps.get_model('users', 'User')
    role_binding_model = apps.get_model('rbac', 'SystemRoleBinding')
    users = user_model.objects.using(db_alias).all()

    role_mapper = {}
    role_bindings = []
    for i, user in enumerate(users):
        role = role_mapper.get(user.role)
        if not role:
            role = BuiltinRole.get_system_role_by_old_name(user.role)
            role_mapper[user.role] = role

        role_binding = role_binding_model(scope='system', user_id=user.id, role_id=role.id)
        role_bindings.append(role_binding)
        if len(role_bindings) >= 1000:
            role_binding_model.objects.bulk_create(role_bindings, ignore_conflicts=True)
            print("Create role binding: {}-{}".format(i, i+len(role_bindings)))
            role_bindings = []
    role_binding_model.objects.bulk_create(role_bindings, ignore_conflicts=True)


def migrate_org_role_binding(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    org_member_model = apps.get_model('orgs', 'OrganizationMember')
    role_binding_model = apps.get_model('rbac', 'RoleBinding')
    members = org_member_model.objects.using(db_alias).all()

    role_bindings = []
    role_mapper = {}
    for i, member in enumerate(members):
        role = role_mapper.get(member.role)
        if not role:
            role = BuiltinRole.get_org_role_by_old_name(member.role)
            role_mapper[member.role] = role
        role_binding = role_binding_model(
            scope='org',
            user_id=member.user.id,
            role_id=role.id,
            org_id=member.org.id
        )
        role_bindings.append(role_binding)
        if len(role_bindings) >= 1000:
            print("Create org role binding: {}-{}".format(i, i+len(role_bindings)))
            role_binding_model.objects.bulk_create(role_bindings, ignore_conflicts=True)
            role_bindings = []
    role_binding_model.objects.bulk_create(role_bindings, ignore_conflicts=True)


class Migration(migrations.Migration):

    dependencies = [
        ('rbac', '0003_auto_20211130_1037'),
    ]

    operations = [
        migrations.RunPython(migrate_system_role_binding),
        migrations.RunPython(migrate_org_role_binding)
    ]
