# Generated by Django 3.1.14 on 2022-04-01 03:32

from django.db import migrations, models


def initial_default_protocol(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    Protocol = apps.get_model("terminal", "Protocol")
    protocols = [
        {'name': 'http', 'port': 80},
        {'name': 'ssh', 'port': 22},
        {'name': 'rdp', 'port': 3389},
        {'name': 'mysql', 'port': 3306},
        {'name': 'oracle', 'port': 1521},
        {'name': 'mariadb', 'port': 3306},
        {'name': 'postgresql', 'port': 5432},
        {'name': 'sqlserver', 'port': 1433},
        {'name': 'redis', 'port': 6379},
        {'name': 'mongodb', 'port': 27017},
    ]
    protocols = [Protocol(**p) for p in protocols]
    Protocol.objects.using(db_alias).bulk_create(protocols)


def migrate_terminal_protocols_field(apps, schema_editor):
    Terminal = apps.get_model("terminal", "Terminal")
    Protocol = apps.get_model("terminal", "Protocol")
    protocols_map = {p.name: p for p in Protocol.objects.all()}
    type_default_protocols = {
        'koko': ['http', 'ssh'],
        'lion': ['http'],
        'xrdp': ['rdp'],
        'omnidb': ['http'],
        'magnus': ['oracle', 'mariadb', 'postgresql', 'sqlserver', 'redis', 'mongodb']
    }
    for terminal in Terminal.objects.all():
        protocol_names = type_default_protocols.get(terminal.type)
        if not protocol_names:
            continue
        protocols = [protocols_map[name] for name in protocol_names if name in protocols_map]
        if not protocols:
            continue
        terminal.protocols.set(protocols)


class Migration(migrations.Migration):

    dependencies = [
        ('terminal', '0048_terminal_domains'),
    ]

    operations = [
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('http', 'HTTP'), ('ssh', 'SSH'), ('rdp', 'RDP'), ('mysql', 'MySQL'), ('oracle', 'Oracle'), ('mariadb', 'MariaDB'), ('postgresql', 'PostgreSQL'), ('sqlserver', 'SQLServer'), ('redis', 'Redis'), ('mongodb', 'MongoDB')], max_length=64, verbose_name='Name')),
                ('port', models.IntegerField(verbose_name='Port')),
            ],
        ),
        migrations.RunPython(initial_default_protocol),
        migrations.AddField(
            model_name='terminal',
            name='protocols',
            field=models.ManyToManyField(related_name='terminals', to='terminal.Protocol', verbose_name='Protocol'),
        ),
        migrations.RunPython(migrate_terminal_protocols_field)
    ]
